{"version":3,"sources":["../src/MissionPeerIdMessageParams.ts"],"names":[],"mappings":";;AAAA,mDAAgD;AAEhD;;GAEG;AACH,gCAAgD,SAAQ,uBAAiB;IAIvE,YAAY,MAA4C;QACtD,KAAK,CACH,0BAA0B,CAAC,SAAS,EACpC,0BAA0B,CAAC,YAAY,EACvC,MAAM,CACP,CAAC;IACJ,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;;AAlBa,oCAAS,GAAG,EAAE,CAAC;AACf,uCAAY,GAAG,yBAAyB,CAAC;AAFzD,6CAoBC","file":"MissionPeerIdMessageParams.js","sourcesContent":["import BaseMessageParams from './MessageParams';\n\n/**\n * @class The Class MissionPeerIdMessageParams represent internal message from provider to consumer to announce his mission selfId.\n */\nexport default class MissionPeerIdMessageParams extends BaseMessageParams {\n  public static _protocol = '';\n  public static _messageType = 'mission_peer_id_message';\n\n  constructor(values?: Partial<MissionPeerIdMessageParams>) {\n    super(\n      MissionPeerIdMessageParams._protocol,\n      MissionPeerIdMessageParams._messageType,\n      values,\n    );\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n  }\n}\n"]}