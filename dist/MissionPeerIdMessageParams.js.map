{"version":3,"sources":["../src/MissionPeerIdMessageParams.ts"],"names":[],"mappings":";;AAAA,mDAAgD;AAEhD;;GAEG;AACH,gCAAgD,SAAQ,uBAAiB;IAIrE,YAAY,MAA4C;QACpD,KAAK,CAAC,0BAA0B,CAAC,SAAS,EAAE,0BAA0B,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IACjG,CAAC;IAEM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEO,WAAW,CAAC,IAAS;QACzB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;;AAda,oCAAS,GAAG,EAAE,CAAC;AACf,uCAAY,GAAG,yBAAyB,CAAC;AAF3D,6CAgBC","file":"MissionPeerIdMessageParams.js","sourcesContent":["import BaseMessageParams from './MessageParams';\n\n/**\n * @class The Class MissionPeerIdMessageParams represent internal message from provider to consumer to announce his mission selfId.\n */\nexport default class MissionPeerIdMessageParams extends BaseMessageParams {\n    public static _protocol = '';\n    public static _messageType = 'mission_peer_id_message';\n\n    constructor(values?: Partial<MissionPeerIdMessageParams>) {\n        super(MissionPeerIdMessageParams._protocol, MissionPeerIdMessageParams._messageType, values);\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        return formattedParams;\n    }\n\n    public  deserialize(json: any): void {\n        super.deserialize(json);\n    }\n}\n"]}