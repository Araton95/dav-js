{"version":3,"sources":["../src/drone-delivery/BidParams.ts"],"names":[],"mappings":";;AAAA,4CAAyC;AAYzC;;GAEG;AACH,eAA+B,SAAQ,mBAAa;IAiBhD,YAAY,MAA2B;QACnC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;SACzB;IACL,CAAC;IAbM,MAAM,CAAC,cAAc;QACxB,OAAO,SAAS,CAAC,KAAK,CAAC;IAC3B,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC5B,OAAO,SAAS,CAAC,SAAS,CAAC;IAC/B,CAAC;IASM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,GAAG,EAAE,IAAI,CAAC,GAAG;SAChB,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,GAAG,GAAI,IAAI,CAAC,GAAG,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,KAAgB;QAC1B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC;IACzD,CAAC;;AAtCc,mBAAS,GAAG,gBAAgB,CAAC;AAC7B,eAAK,GAAG,KAAK,CAAC;AAFjC,4BAwCC","file":"BidParams.js","sourcesContent":["import BaseBidParams from '../BidParams';\nimport IBaseBidParams from '../IBidParams';\n\n/**\n * @interface IBidParams The interface drone-delivery/IBidParams represent a valid argument of drone-delivery/BidParams constructor.\n */\ninterface IBidParams extends IBaseBidParams {\n    /**\n     * @property Estimated time from contract signing to delivery in seconds.\n     */\n    eta: number;\n}\n/**\n * @class The Class drone-delivery/BidParams represent the parameters of drone-delivery bid.\n */\nexport default class BidParams extends BaseBidParams {\n    private static _protocol = 'drone_delivery';\n    private static _type = 'bid';\n\n    /**\n     * @property Estimated time from contract signing to delivery in seconds.\n     */\n    public eta?: number;\n\n    public static getMessageType(): string {\n        return BidParams._type;\n    }\n\n    public static getMessageProtocol(): string {\n        return BidParams._protocol;\n    }\n\n    constructor(values: Partial<IBidParams>) {\n        super(BidParams._protocol, BidParams._type, values);\n        if (!!values) {\n            this.eta = values.eta;\n        }\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {\n            eta: this.eta,\n        });\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.eta =  json.eta;\n    }\n\n    public equals(other: BidParams): boolean {\n        return super.equals(other) && this.eta === other.eta;\n    }\n}\n"]}