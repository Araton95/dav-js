{"version":3,"sources":["../src/mocks/Web3Mock.ts"],"names":[],"mappings":";;AAAA,sCAAsC;AACtC;IAEE,IAAW,OAAO,KAAU,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IAEtD,IAAW,aAAa,KAAU,OAAO,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;CACnE;AAED;IAEE,IAAW,mBAAmB,KAAU,OAAO,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAE9E,IAAW,eAAe,KAAU,OAAO,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;CACvE;AAED;CACC;AAED;IAAA;QAIS,UAAK,GAAG;YACb,IAAI,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC;SACpB,CAAC;IACJ,CAAC;IAJC,IAAW,GAAG,KAAU,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;AAFhC,kBAAS,GAAG,EAAE,YAAY,EAAE,CAAC;AAC7B,YAAG,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;AAF7E,2BAOC","file":"Web3Mock.js","sourcesContent":["// tslint:disable:max-classes-per-file\nclass Contract {\n  public static methods: any;\n  public get methods(): any { return Contract.methods; }\n  public static getPastEvents: any;\n  public get getPastEvents(): any { return Contract.getPastEvents; }\n}\n\nclass Accounts {\n  public static privateKeyToAccount: any;\n  public get privateKeyToAccount(): any { return Accounts.privateKeyToAccount; }\n  public static signTransaction: any;\n  public get signTransaction(): any { return Accounts.signTransaction; }\n}\n\nclass HttpProvider {\n}\n\nexport default class Web3Mock {\n  public static providers = { HttpProvider };\n  public static eth = { Contract, accounts: Accounts, getGasPrice: () => 1 };\n  public get eth(): any { return Web3Mock.eth; }\n  public utils = {\n    sha3: (x: any) => x,\n  };\n}\n"]}