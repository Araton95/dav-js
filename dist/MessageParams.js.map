{"version":3,"sources":["../src/MessageParams.ts"],"names":[],"mappings":";;AAAA,+CAAwC;AAUxC;;GAEG;AACH,mBAA4C,SAAQ,qBAAW;IAM3D,YAAY,QAAgB,EAAE,IAAY,EAAE,MAA+B;QACvE,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACnC;IACL,CAAC;IAEM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;QAC1D,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;CACJ;AAvBD,gCAuBC","file":"MessageParams.js","sourcesContent":["import BasicParams from './BasicParams';\nimport { ID, BigInteger } from './common-types';\n\nexport interface IMessageParams {\n    /**\n     * @property The message sender id.\n     */\n    senderId: ID | BigInteger;\n}\n\n/**\n * @class The abstract Class MessageParams represent common parameters of MessageParams classes.\n */\nexport default abstract class MessageParams extends BasicParams {\n    /**\n     * @property The message sender id.\n     */\n    public senderId: ID | BigInteger;\n\n    constructor(protocol: string, type: string, values?: Partial<MessageParams>) {\n        super(protocol, type, values);\n        if (!!values) {\n            this.senderId = values.senderId;\n        }\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {senderId: this.senderId});\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.senderId = json.senderId;\n    }\n}\n"]}