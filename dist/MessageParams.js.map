{"version":3,"sources":["../src/MessageParams.ts"],"names":[],"mappings":";;AAAA,+CAAwC;AAUxC;;GAEG;AACH,mBAA4C,SAAQ,qBAAW;IAM7D,YAAY,QAAgB,EAAE,IAAY,EAAE,MAA+B;QACzE,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;SACjC;IACH,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5D,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC,CAAC;CACF;AAvBD,gCAuBC","file":"MessageParams.js","sourcesContent":["import BasicParams from './BasicParams';\nimport { ID, BigInteger } from './common-types';\n\nexport interface IMessageParams {\n  /**\n   * @property The message sender id.\n   */\n  senderId: ID | BigInteger;\n}\n\n/**\n * @class The abstract Class MessageParams represent common parameters of MessageParams classes.\n */\nexport default abstract class MessageParams extends BasicParams {\n  /**\n   * @property The message sender id.\n   */\n  public senderId: ID | BigInteger;\n\n  constructor(protocol: string, type: string, values?: Partial<MessageParams>) {\n    super(protocol, type, values);\n    if (!!values) {\n      this.senderId = values.senderId;\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, { senderId: this.senderId });\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.senderId = json.senderId;\n  }\n}\n"]}