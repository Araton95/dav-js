{"version":3,"sources":["../src/IConfig.ts"],"names":[],"mappings":"","file":"IConfig.js","sourcesContent":["import { BlockchainType } from './common-enums';\nimport { ContractsArtifacts } from './common-types';\nexport default interface IConfig {\n  /**\n   * @property Ethereum blockchain node url.\n   */\n  ethNodeUrl?: string;\n  /**\n   * @property Array of Dav API nodes url.\n   */\n  apiSeedUrls?: string[];\n  /**\n   * @property Array of Dav kafka nodes url.\n   */\n  kafkaSeedUrls?: string[];\n  /**\n   * @property Hop limit, in seconds, for Identity messages to expires (not in use).\n   */\n  identityTtl?: number;\n  /**\n   * @property Hop limit, in seconds, for needs subscription to expires.\n   */\n  needTypeTtl?: number;\n  /**\n   * @property Hop limit, in seconds, for need registration to expires.\n   */\n  needTtl?: number;\n  /**\n   * @property Hop limit, in seconds, for missions to expires.\n   */\n  missionConsumerTtl?: number;\n  /**\n   * @property Hop limit, in seconds, for missionProvider to expires (not in use).\n   */\n  missionProviderTtl?: number;\n  /**\n   * @property Time, in milliseconds, the timer should delay in between reask kafka for new events.\n   */\n  kafkaBrowserPollingInterval?: number;\n  /**\n   * @property Time, in milliseconds, timeout for kafka requests via network node.\n   */\n  kafkaBrowserRequestTimeout?: number;\n  /**\n   * @property Blockchain type (local/test/main). for using local blockchain, you must specify contracts.\n   */\n  blockchainType?: BlockchainType;\n  /**\n   * @property Contracts artifacts.\n   */\n  contracts?: ContractsArtifacts;\n}\n"]}