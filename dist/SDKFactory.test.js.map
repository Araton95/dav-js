{"version":3,"sources":["../src/SDKFactory.test.ts"],"names":[],"mappings":";;AAAA,6CAAsC;AACtC,qCAAqC;AAErC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAClC,UAAU;QACV,MAAM,MAAM,GAAG,IAAI,gBAAa,CAAC,EAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;QAE/G,MAAM;QACN,MAAM,GAAG,GAAG,oBAAU,CAAC,MAAM,CAAC,CAAC;QAE/B,SAAS;QACT,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC;QACtC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"SDKFactory.test.js","sourcesContent":["import SDKFactory from './SDKFactory';\nimport Configuration from './Config';\n\ndescribe('SDKFactory method', () => {\n    it('should create SDK instance', () => {\n        // Arrange\n        const config = new Configuration({apiSeedUrls: ['apiUrl'], ethNodeUrl: 'ethUrl', kafkaSeedUrls: ['kafkaUrl']});\n\n        // Act\n        const sdk = SDKFactory(config);\n\n        // Assert\n        expect(sdk.getIdentity).toBeDefined();\n        expect(sdk.isRegistered).toBeDefined();\n        expect(sdk.registerIdentity).toBeDefined();\n    });\n});\n"]}