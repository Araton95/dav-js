{"version":3,"sources":["../src/retryPromise.ts"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,sBAAgC,OAAmB,EAAE,OAAgC;IACjF,OAAO,IAAI,OAAO,CAAI,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;QAC5C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC3C,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE;YACnB,OAAO,CAAC,IAAI,CACR,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EACf,GAAG,CAAC,EAAE;gBACF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBACvB,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;iBACjC;YACL,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAbD,oCAaC","file":"retryPromise.js","sourcesContent":["import * as retry from 'retry';\n\nexport function retryPromise<T>(promise: Promise<T>, options?: retry.OperationOptions): Promise<T> {\n    return new Promise<T>(async (resolve, reject) => {\n        const operation = retry.operation(options);\n        operation.attempt(() => {\n            promise.then(\n                t => resolve(t),\n                err => {\n                    if (!operation.retry(err)) {\n                        reject(operation.mainError());\n                    }\n                });\n        });\n    });\n}\n"]}