{"version":3,"sources":["../src/vessel-charging/NeedParams.ts"],"names":[],"mappings":";;AAAA,8CAA2C;AAI3C;;GAEG;AACH,gBAAgC,SAAQ,oBAAc;IAWpD,YAAY,MAA4B;QACtC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACpB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;aACjD;YACD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;YACxD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;SACnC;IACH,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAClC,CAAC;;AA9Ca,oBAAS,GAAG,iBAAiB,CAAC;AAC9B,uBAAY,GAAG,MAAM,CAAC;AAFtC,6BAgDC","file":"NeedParams.js","sourcesContent":["import BaseNeedParams from '../NeedParams';\nimport { IDimensions } from '../common-types';\nimport { EnergySources, Amenities } from './enums';\n\n/**\n * @class The Class vessel-charging/NeedParams represent the parameters of vessel-charging need.\n */\nexport default class NeedParams extends BaseNeedParams {\n  public static _protocol = 'vessel_charging';\n  public static _messageType = 'need';\n  public radius: number;\n  public startAt: number;\n  public dimensions: IDimensions;\n  public batteryCapacity: number;\n  public currentBatteryCharge: number;\n  public energySource: EnergySources;\n  public amenities: Amenities[];\n\n  constructor(values?: Partial<NeedParams>) {\n    super(NeedParams._protocol, NeedParams._messageType, values);\n    if (!!values) {\n      if (!values.location) {\n        throw new Error('location is a required field');\n      }\n      this.startAt = values.startAt;\n      this.dimensions = values.dimensions;\n      this.batteryCapacity = values.batteryCapacity;\n      this.currentBatteryCharge = values.currentBatteryCharge;\n      this.energySource = values.energySource;\n      this.amenities = values.amenities;\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, {\n      startAt: this.startAt,\n      dimensions: this.dimensions,\n      batteryCapacity: this.batteryCapacity,\n      currentBatteryCharge: this.currentBatteryCharge,\n      energySource: this.energySource,\n      amenities: this.amenities,\n    });\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.startAt = json.startAt;\n    this.dimensions = json.dimensions;\n    this.batteryCapacity = json.batteryCapacity;\n    this.currentBatteryCharge = json.currentBatteryCharge;\n    this.energySource = json.energySource;\n    this.amenities = json.amenities;\n  }\n}\n"]}