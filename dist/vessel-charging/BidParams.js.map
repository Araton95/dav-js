{"version":3,"sources":["../src/vessel-charging/BidParams.ts"],"names":[],"mappings":";;AAAA,4CAAyC;AA8EzC;;GAEG;AACH,eAA+B,SAAQ,mBAAa;IA6BhD,YAAY,MAA4B;QACpC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;gBACvB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;YACxC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC7B;IACL,CAAC;IAxBM,MAAM,CAAC,cAAc;QACxB,OAAO,SAAS,CAAC,YAAY,CAAC;IAClC,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC5B,OAAO,SAAS,CAAC,SAAS,CAAC;IAC/B,CAAC;IAoBM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,YAAY,EAAE,IAAI,CAAC,SAAS;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;SACxB,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC5B,CAAC;IAEM,MAAM,CAAC,KAAgB;QAC1B,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;;AA5Ea,mBAAS,GAAG,iBAAiB,CAAC;AAC9B,sBAAY,GAAG,KAAK,CAAC;AAHvC,4BA+EC","file":"BidParams.js","sourcesContent":["import BaseBidParams from '../BidParams';\nimport { ID, DavID, ILocation } from '../common-types';\nimport IBaseBidParams from '../IBidParams';\nimport { EnergySources, Amenities } from './enums';\n\n/**\n * @interface IBidParams The interface vessel-charging/IBidParams represent a valid argument of vessel-charging/BidParams constructor.\n */\n\ninterface IBidParams extends IBaseBidParams {\n    /**\n     * @property A human readable name/description of the charger location (e.g., Cal Maritime Dock C).\n     */\n    locationName: string;\n    /**\n     * @property The language used in location_name. Specified using the 3 letter ISO 639-3 language code.\n     */\n    locationNameLang: string;\n    /**\n     * @property The city where the charger is located.\n     */\n    locationCity: string;\n    /**\n     * @property The postal code of the charger address.\n     */\n    locationPostalCode: string;\n    /**\n     * @property The county where the charger is located.\n     */\n    locationCounty: string;\n    /**\n     * @property The state where the charger is located.\n     */\n    locationState: string;\n    /**\n     * @property The country where the charger is located.\n     */\n    locationCountry: string;\n    /**\n     * @property The charging station entrance location.\n     */\n    entranceLocation: ILocation;\n    /**\n     * @property The charging station exit location.\n     */\n    exitLocation: ILocation;\n    /**\n     * @property The time from which the charger can be made available for the vessel requesting a charge.\n     * Specified as time in milliseconds since Epoch/Unix Time.\n     */\n    availableFrom: number;\n    /**\n     * @property The time until which the charger can be made available for the vessel requesting a charge.\n     * Specified as time in milliseconds since Epoch/Unix Time\n     */\n    availableUntil: number;\n    /**\n     * @property The source of the energy used by this charger. Specified as an energy source id.\n     */\n    energySource: EnergySources;\n    /**\n     * @property A list of amenities that are present at this charger. Specified as a comma separated list of amenity ids.\n     */\n    amenities: Amenities[];\n    /**\n     * @property Name of the service provider or charging network operating this charger.\n     */\n    provider: string;\n    /**\n     * @property Name of the manufacturer of this charger.\n     */\n    manufacturer: string;\n    /**\n     * @property Name of the model of this charger.\n     */\n    model: string;\n}\n\n/**\n * @class The Class vessel-charging/BidParams represent the parameters of vessel-charging bid.\n */\nexport default class BidParams extends BaseBidParams {\n\n    public static _protocol = 'vessel_charging';\n    public static _messageType = 'bid';\n    public locationName: string;\n    public locationNameLang: string;\n    public locationCity: string;\n    public locationPostalCode: string;\n    public locationCounty: string;\n    public locationState: string;\n    public locationCountry: string;\n    public entranceLocation: ILocation;\n    public exitLocation: ILocation;\n    public availableFrom: number;\n    public availableUntil: number;\n    public energySource: EnergySources;\n    public amenities: Amenities[];\n    public provider: string;\n    public manufacturer: string;\n    public model: string;\n\n    public static getMessageType(): string {\n        return BidParams._messageType;\n    }\n\n    public static getMessageProtocol(): string {\n        return BidParams._protocol;\n    }\n\n    constructor(values?: Partial<IBidParams>) {\n        super(BidParams._protocol, BidParams._messageType, values);\n        if (!!values) {\n            if (!values.availableFrom) {\n                throw new Error('availableFrom is a required field');\n            }\n            this.entranceLocation = values.entranceLocation;\n            this.exitLocation = values.exitLocation;\n            this.availableFrom = values.availableFrom;\n            this.availableUntil = values.availableUntil;\n            this.energySource = values.energySource;\n            this.amenities = values.amenities;\n            this.provider = values.provider;\n            this.manufacturer = values.manufacturer;\n            this.model = values.model;\n        }\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {\n            entranceLocation: this.entranceLocation,\n            exitLocation: this.exitLocation,\n            availableFrom: this.availableFrom,\n            availableUntil: this.availableUntil,\n            energySource: this.energySource,\n            amenities: this.amenities,\n            provider: this.amenities,\n            manufacturer: this.amenities,\n            model: this.amenities,\n        });\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.entranceLocation = json.entranceLocation;\n        this.exitLocation = json.exitLocation;\n        this.availableFrom = json.availableFrom;\n        this.availableUntil = json.availableUntil;\n        this.energySource = json.energySource;\n        this.amenities = json.amenities;\n        this.provider = json.provider;\n        this.manufacturer = json.manufacturer;\n        this.model = json.model;\n    }\n\n    public equals(other: BidParams): boolean {\n        return super.equals(other);\n    }\n}\n"]}