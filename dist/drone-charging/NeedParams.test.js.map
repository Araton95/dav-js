{"version":3,"sources":["../src/drone-charging/NeedParams.test.ts"],"names":[],"mappings":";;AAAA,6CAAsC;AAEtC,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,UAAsB,CAAC;IAC3B,IAAI,oBAAyB,CAAC;IAE9B,UAAU,CAAC,GAAG,EAAE;QACd,UAAU,GAAG,IAAI,oBAAU,CAAC;YAC1B,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE;gBACR,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;aAChB;SACF,CAAC,CAAC;QAEH,oBAAoB,GAAG;YACrB,GAAG,EAAE,SAAS;YACd,QAAQ,EAAE,gBAAgB;YAC1B,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE;gBACR,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,SAAS;aAChB;YACD,KAAK,EAAE,SAAS;YAChB,EAAE,EAAE,SAAS;SACd,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;YAC5E,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;YAC7C,MAAM,gBAAgB,GAAG,IAAI,oBAAU,EAAE,CAAC;YAC1C,gBAAgB,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,CAAC,cAAc,CAAC,oBAAU,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2EAA2E,EAAE,GAAG,EAAE;YACnF,MAAM,gBAAgB,GAAG,IAAI,oBAAU,EAAE,CAAC;YAC1C,gBAAgB,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"NeedParams.test.js","sourcesContent":["import NeedParams from './NeedParams';\n\ndescribe('NeedParams class', () => {\n  let needParams: NeedParams;\n  let serializedNeedParams: any;\n\n  beforeEach(() => {\n    needParams = new NeedParams({\n      davId: undefined,\n      location: {\n        lat: undefined,\n        long: undefined,\n      },\n    });\n\n    serializedNeedParams = {\n      ttl: undefined,\n      protocol: 'drone_charging',\n      type: 'need',\n      location: {\n        lat: undefined,\n        long: undefined,\n      },\n      davId: undefined,\n      id: undefined,\n    };\n  });\n\n  describe('serialize method', () => {\n    it('should return serialized NeedParams object with the current values', () => {\n      expect(needParams.serialize()).toEqual(serializedNeedParams);\n    });\n  });\n\n  describe('deserialize method', () => {\n    it('should return a NeedParams instance', () => {\n      const needParamsObject = new NeedParams();\n      needParamsObject.deserialize(serializedNeedParams);\n      expect(needParamsObject).toBeInstanceOf(NeedParams);\n    });\n\n    it('should return deserialize NeedParams instance with the current parameters', () => {\n      const needParamsObject = new NeedParams();\n      needParamsObject.deserialize(serializedNeedParams);\n      expect(needParamsObject).toEqual(needParams);\n    });\n  });\n});\n"]}