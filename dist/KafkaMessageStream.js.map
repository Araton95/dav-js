{"version":3,"sources":["../src/KafkaMessageStream.ts"],"names":[],"mappings":";;AAAA,iDAA4C;AAS5C;IAOI,YAAoB,WAAsC;QAAtC,gBAAW,GAAX,WAAW,CAA2B;IAAI,CAAC;IANvD,MAAM,CAAC,QAAQ,CAAwB,SAAmC,EAAE,IAAS;QACzF,MAAM,cAAc,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7D,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,OAAO,cAAc,CAAC;IAC1B,CAAC;IAIM,UAAU,CAAwB,gBAAqB,EAAE,WAAqB;QACjF,OAAO,yBAAU,CAAC,cAAc,CAAI,IAAI,CAAC,WAAW;aAC/C,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACvD,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACb,MAAM,QAAQ,GAAG,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChD,OAAO,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnE,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;CACJ;AAjBD,qCAiBC","file":"KafkaMessageStream.js","sourcesContent":["import { Observable } from './common-types';\nimport BasicParams from './BasicParams';\n\nexport interface IKafkaMessage {\n    protocol: string;\n    type: string;\n    contents: string;\n}\n\nexport default class KafkaMessageStream {\n    private static fromJson<T extends BasicParams>(classType: new (...all: any[]) => T, json: any): T {\n        const objectInstance = new classType.prototype.constructor();\n        objectInstance.deserialize(JSON.parse(json));\n        return objectInstance;\n    }\n\n    constructor(private kafkaStream: Observable<IKafkaMessage>) { }\n\n    public filterType<T extends BasicParams>(protocolTypesMap: any, typesFilter: string[]): Observable<T> {\n        return Observable.fromObservable<T>(this.kafkaStream\n            .filter((message) => typesFilter.includes(message.type))\n            .map((message) => {\n                const protocol = protocolTypesMap[message.type];\n                return KafkaMessageStream.fromJson(protocol, message.contents);\n            }), this.kafkaStream.topic);\n    }\n}\n"]}