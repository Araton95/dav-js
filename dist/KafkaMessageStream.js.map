{"version":3,"sources":["../src/KafkaMessageStream.ts"],"names":[],"mappings":";;AAAA,iDAA4C;AAE5C,+DAAwD;AAQxD;IAUE,YAAoB,WAAsC;QAAtC,gBAAW,GAAX,WAAW,CAA2B;IAAG,CAAC;IATtD,MAAM,CAAC,QAAQ,CACrB,SAAmC,EACnC,IAAS;QAET,MAAM,cAAc,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC7D,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,OAAO,cAAc,CAAC;IACxB,CAAC;IAIM,UAAU,CACf,WAAqB;QAErB,OAAO,yBAAU,CAAC,cAAc,CAC9B,IAAI,CAAC,WAAW;aACb,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACrD,GAAG,CAAC,OAAO,CAAC,EAAE;YACb,MAAM,QAAQ,GAAG,6BAAmB,CAAC,QAAQ,CAAC,YAAY,CACxD,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,IAAI,CACb,CAAC;YACF,OAAO,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjE,CAAC,CAAC,EACJ,IAAI,CAAC,WAAW,CAAC,KAAK,CACvB,CAAC;IACJ,CAAC;CACF;AA5BD,qCA4BC","file":"KafkaMessageStream.js","sourcesContent":["import { Observable } from './common-types';\nimport BasicParams from './BasicParams';\nimport KafkaMessageFactory from './KafkaMessageFactory';\n\nexport interface IKafkaMessage {\n  protocol: string;\n  type: string;\n  contents: string;\n}\n\nexport default class KafkaMessageStream {\n  private static fromJson<T extends BasicParams>(\n    classType: new (...all: any[]) => T,\n    json: any,\n  ): T {\n    const objectInstance = new classType.prototype.constructor();\n    objectInstance.deserialize(JSON.parse(json));\n    return objectInstance;\n  }\n\n  constructor(private kafkaStream: Observable<IKafkaMessage>) {}\n\n  public filterType<T extends BasicParams>(\n    typesFilter: string[],\n  ): Observable<T> {\n    return Observable.fromObservable<T>(\n      this.kafkaStream\n        .filter(message => typesFilter.includes(message.type))\n        .map(message => {\n          const protocol = KafkaMessageFactory.instance.getClassType<T>(\n            message.protocol,\n            message.type,\n          );\n          return KafkaMessageStream.fromJson(protocol, message.contents);\n        }),\n      this.kafkaStream.topic,\n    );\n  }\n}\n"]}