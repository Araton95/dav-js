{"version":3,"sources":["../src/ride-hailing/BidParams.ts"],"names":[],"mappings":";;AAAA,4CAAyC;AA8CzC;;GAEG;AACH,eAA+B,SAAQ,mBAAa;IAiBlD,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,EAAE;YACX,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;SACpD;aAAM;YACL,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAC3D,oCAAoC;YACpC,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;SACrC;IACH,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC7B,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,KAAgB;QAC5B,OAAO,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC;;AA/Ca,mBAAS,GAAG,cAAc,CAAC;AAC3B,sBAAY,GAAG,KAAK,CAAC;AAFrC,4BAiDC","file":"BidParams.js","sourcesContent":["import BaseBidParams from '../BidParams';\nimport IBaseBidParams from '../IBidParams';\n\n/**\n * @interface IVehicleDetails is represents vehicle details in a bid of ride-hailing protocol\n */\ninterface IVehicleDetails {\n  /**\n   * @property The vehicle's type.\n   */\n  type: string;\n  /**\n   * @property The vehicle's manufacturer.\n   */\n  manufacturer: string;\n  /**\n   * @property The vehicle's model.\n   */\n  model: string;\n  /**\n   * @property The vehicle's color.\n   */\n  color: string;\n  /**\n   * @property The vehicle's license plate.\n   */\n  licensePlate: string;\n}\n\n/**\n * @interface IBidParams The interface ride-hailing/IBidParams represent a valid argument of ride-hailing/BidParams constructor.\n */\ninterface IBidParams extends IBaseBidParams {\n  /**\n   * @property The provider's vehicle current location (required).\n   */\n  currentVehicleLocation: Location;\n  /**\n   * @property The vehicle details.\n   */\n  vehicle: IVehicleDetails;\n  /**\n   * @property The driver name.\n   */\n  driverName: string;\n}\n/**\n * @class The Class ride-hailing/BidParams represent the parameters of ride-hailing bid.\n */\nexport default class BidParams extends BaseBidParams {\n  public static _protocol = 'ride_hailing';\n  public static _messageType = 'bid';\n\n  /**\n   * @property The provider's vehicle current location.\n   */\n  public currentVehicleLocation: Location;\n  /**\n   * @property The vehicle details.\n   */\n  public vehicle: IVehicleDetails;\n  /**\n   * @property The driver name.\n   */\n  public driverName: string;\n\n  constructor(values?: Partial<IBidParams>) {\n    if (!values) {\n      super(BidParams._protocol, BidParams._messageType);\n    } else {\n      super(BidParams._protocol, BidParams._messageType, values);\n      // TODO: throw if not enough details\n      this.currentVehicleLocation = values.currentVehicleLocation;\n      this.vehicle = values.vehicle;\n      this.driverName = values.driverName;\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, {\n      currentVehicleLocation: this.currentVehicleLocation,\n      vehicle: this.vehicle,\n      driverName: this.driverName,\n    });\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.currentVehicleLocation = json.currentVehicleLocation;\n    this.vehicle = json.vehicle;\n    this.driverName = json.driverName;\n  }\n\n  public equals(other: BidParams): boolean {\n    return this.ttl === other.ttl && super.equals(other);\n  }\n}\n"]}