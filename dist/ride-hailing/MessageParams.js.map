{"version":3,"sources":["../src/ride-hailing/MessageParams.ts"],"names":[],"mappings":";;AAAA,oDAA2F;AAE3F,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,wCAAuB,CAAA;IACvB,uEAAsD,CAAA;IACtD,0DAAyC,CAAA;IACzC,wDAAuC,CAAA;IACvC,0DAAyC,CAAA;AAC7C,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;AAYD;;GAEG;AACH,mBAAmC,SAAQ,uBAAiB;IAOxD,YAAY,MAAgC;QACxC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;SAC7C;IACL,CAAC;IAEM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,aAAa,EAAE,IAAI,CAAC,aAAa;SACpC,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IAC5C,CAAC;;AAvBa,uBAAS,GAAG,cAAc,CAAC;AAC3B,0BAAY,GAAG,SAAS,CAAC;AAH3C,gCA0BC","file":"MessageParams.js","sourcesContent":["import BaseMessageParams, { IMessageParams as IBaseMessageParams } from '../MessageParams';\n\nexport enum MissionStatus {\n    OnTheWay = 'on_the_way',\n    VehicleAtPickupLocation = 'vehicle_at_pickup_location',\n    PassengerIsComing = 'passenger_is_coming',\n    RidingHasStarted = 'riding_has_started',\n    RidingHasFinished = 'riding_has_finished',\n}\n\n/**\n * @interface IMessageParams extends The base interface IMessageParams for ride hailing protocol for all messages except OnTheWay message.\n */\ninterface IMessageParams extends IBaseMessageParams {\n    /**\n     * @property Last mission status.\n     */\n    missionStatus: MissionStatus;\n}\n\n/**\n * @class The Class ride-hailing/MessageParams represent the parameters of ride-hailing message for all messages except OnTheWay message.\n */\nexport default class MessageParams extends BaseMessageParams {\n\n    public static _protocol = 'ride_hailing';\n    public static _messageType = 'message';\n\n    public missionStatus: MissionStatus;\n\n    constructor(values?: Partial<IMessageParams>) {\n        super(MessageParams._protocol, MessageParams._messageType, values);\n        if (!!values) {\n            this.missionStatus = values.missionStatus;\n        }\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {\n            missionStatus: this.missionStatus,\n        });\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.missionStatus = json.missionStatus;\n    }\n}\n"]}