{"version":3,"sources":["../src/ride-hailing/NeedParams.ts"],"names":[],"mappings":";;AAAA,8CAA2C;AAG3C;;GAEG;AACH,gBAAgC,SAAQ,oBAAc;IAclD,YAAY,MAA4B;QACpC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;aACrD;YACD,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YAC5C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;SACzD;IACL,CAAC;IAEM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;SAChD,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;IACxD,CAAC;;AApCa,oBAAS,GAAG,cAAc,CAAC;AAC3B,uBAAY,GAAG,MAAM,CAAC;AAHxC,6BAuCC","file":"NeedParams.js","sourcesContent":["import BaseNeedParams from '../NeedParams';\nimport { ILocation } from '../common-types';\n\n/**\n * @class The Class ride-hailing/NeedParams represent the parameters of ride-hailing need.\n */\nexport default class NeedParams extends BaseNeedParams {\n\n    public static _protocol = 'ride_hailing';\n    public static _messageType = 'need';\n\n    /**\n     * @property The passenger's pickup location (required).\n     */\n    public pickupLocation: ILocation;\n    /**\n     * @property The passenger's dropoff location (required).\n     */\n    public destinationLocation: ILocation;\n\n    constructor(values?: Partial<NeedParams>) {\n        super(NeedParams._protocol, NeedParams._messageType, values);\n        if (!!values) {\n            if (!values.pickupLocation || !values.destinationLocation) {\n                throw new Error('Need lack of essential details');\n            }\n            this.pickupLocation = values.pickupLocation;\n            this.destinationLocation = values.destinationLocation;\n        }\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {\n            pickupLocation: this.pickupLocation,\n            destinationLocation: this.destinationLocation,\n        });\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.pickupLocation = json.pickupLocation;\n        this.destinationLocation = json.destinationLocation;\n    }\n}\n"]}