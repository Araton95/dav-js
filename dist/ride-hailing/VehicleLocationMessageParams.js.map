{"version":3,"sources":["../src/ride-hailing/VehicleLocationMessageParams.ts"],"names":[],"mappings":";;AAAA,oDAA2F;AAE3F,mDAAgD;AAYhD;;GAEG;AACH,mBAAmC,SAAQ,uBAAiB;IAQxD,YAAY,MAAgC;QACxC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;YAC9C,IAAI,CAAC,aAAa,GAAG,6BAAa,CAAC,QAAQ,CAAC;SAC/C;IAEL,CAAC;IAEM,SAAS;QACZ,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC3B,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,eAAe,EAAE,IAAI,CAAC,eAAe;SACxC,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,IAAS;QACxB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IAChD,CAAC;;AA5Ba,uBAAS,GAAG,cAAc,CAAC;AAC3B,0BAAY,GAAG,0BAA0B,CAAC;AAH5D,gCA+BC","file":"VehicleLocationMessageParams.js","sourcesContent":["import BaseMessageParams, { IMessageParams as IBaseMessageParams } from '../MessageParams';\nimport { ILocation } from '../common-types';\nimport { MissionStatus } from './MessageParams';\n\n/**\n * @interface IMessageParams extends The base interface IMessageParams for ride hailing protocol for OnTheWay message only.\n */\ninterface IMessageParams extends IBaseMessageParams {\n    /**\n     * @property Last vehicle location.\n     */\n    vehicleLocation: ILocation;\n}\n\n/**\n * @class The Class ride-hailing/MessageParams represent the parameters of ride-hailing message for OnTheWay message only.\n */\nexport default class MessageParams extends BaseMessageParams {\n\n    public static _protocol = 'ride_hailing';\n    public static _messageType = 'vehicle_location_message';\n\n    public missionStatus: MissionStatus;\n    public vehicleLocation: ILocation;\n\n    constructor(values?: Partial<IMessageParams>) {\n        super(MessageParams._protocol, MessageParams._messageType, values);\n        if (!!values) {\n            this.vehicleLocation = values.vehicleLocation;\n            this.missionStatus = MissionStatus.OnTheWay;\n        }\n\n    }\n\n    public serialize() {\n        const formattedParams = super.serialize();\n        Object.assign(formattedParams, {\n            missionStatus: this.missionStatus,\n            vehicleLocation: this.vehicleLocation,\n        });\n        return formattedParams;\n    }\n\n    public deserialize(json: any): void {\n        super.deserialize(json);\n        this.missionStatus = json.missionStatus;\n        this.vehicleLocation = json.vehicleLocation;\n    }\n}\n"]}