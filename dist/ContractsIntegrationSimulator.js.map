{"version":3,"sources":["../src/ContractsIntegrationSimulator.ts"],"names":[],"mappings":"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","file":"ContractsIntegrationSimulator.js","sourcesContent":["/*\nThis script simulate full flow of Contracts use.\nTo use this script fill in all params.\n */\n\n// tslint:disable:no-console\nimport Contracts from './Contracts';\nimport Config from './Config';\nimport { ContractTypes, PriceType } from './common-enums';\nimport Price from './Price';\nconst configuration = new Config({});\n\n// params start\nconst MISSION_ID = '0xf3229680B0166F0812e0ECEAd69B1dd144334229';\nconst MISSION_PRICE = [new Price('100000000000000000', PriceType.flat, '')];\nconst DAV_ID = '0xFEDdDcBf94cB620d6D92D049b75fc7062a3E2Fc6';\nconst WALLET_PRIVATE_KEY = 'PRIVATE_KEY_FOR_0xFEDdDcBf94cB620d6D92D049b75fc7062a3E2Fc6';\nconst IDENTITY_PRIVATE_KEY = 'PRIVATE_KEY_FOR_0xFEDdDcBf94cB620d6D92D049b75fc7062a3E2Fc6';\nconst WALLET_ADDRESS = '0xFEDdDcBf94cB620d6D92D049b75fc7062a3E2Fc6';\nconst VEHICLE_ID = '0x3e54f4d0A7C93516f962e5cfcB402dB6C2700C30';\n// params end\n\n// identityPrivateKey: string, walletAddress\n\nasync function main(): Promise<void> {\n\n    const printLine = () => console.log('====================================================================================================');\n\n    const isRegistered = async () => {\n        console.log('Checking if is registered...');\n        try {\n            const res = await Contracts.isIdentityRegistered(\n                DAV_ID,\n                configuration);\n            console.log(res);\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const registerIdentity = async () => {\n        console.log('Registering identity...');\n        try {\n            const receipt = await Contracts.registerIdentity(\n                DAV_ID,\n                IDENTITY_PRIVATE_KEY,\n                WALLET_ADDRESS,\n                WALLET_PRIVATE_KEY,\n                configuration);\n            console.log(receipt);\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const approveMission = async () => {\n        console.log('Approving mission...');\n        try {\n            const receipt = await Contracts.approveMission(\n                DAV_ID,\n                WALLET_PRIVATE_KEY,\n                configuration);\n            console.log(receipt);\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const startMission = async () => {\n        console.log('Starting mission...');\n        try {\n            const receipt = await Contracts.startMission(\n                MISSION_ID,\n                DAV_ID,\n                WALLET_PRIVATE_KEY,\n                VEHICLE_ID,\n                MISSION_PRICE,\n                configuration);\n            console.log(receipt);\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const finalizeMission = async () => {\n        console.log('Finalizing mission...');\n        try {\n            const receipt = await Contracts.finalizeMission(MISSION_ID, DAV_ID, WALLET_PRIVATE_KEY, configuration);\n            console.log(receipt);\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const watchMission = () => {\n        console.log('Getting events...');\n        try {\n            const observable = Contracts.watchContract(MISSION_ID, ContractTypes.basicMission, configuration);\n            observable.subscribe((event: any) => {\n                console.log('New event:');\n                console.log(event);\n                printLine();\n            },\n            (err: any) => {\n                console.log('Error:');\n                console.log(err);\n                printLine();\n            });\n            printLine();\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const waitASecond = () => {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, 1000);\n        });\n    };\n\n    // await registerIdentity();\n    // await registerIdentity();\n\n    // watchMission();\n    // await approveMission();\n    // await startMission();\n    // await finalizeMission();\n\n}\n\nmain();\n"]}