{"version":3,"sources":["../src/Config.test.ts"],"names":[],"mappings":";;AAAA,qCAA8B;AAC9B,iDAAgD;AAChD,qCAAgD;AAEhD,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAE5B,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAEnD,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,aAAa,GAAG,IAAI,gBAAM,CAAC,EAAE,CAAC,CAAC;YACrC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,6BAAoB,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAEnD,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,mBAAmB,GAAG;gBAC1B,UAAU,EAAE,cAAc;gBAC1B,WAAW,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;gBACjD,aAAa,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;gBACvD,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,EAAE;gBACf,OAAO,EAAE,EAAE;gBACX,kBAAkB,EAAE,EAAE;gBACtB,kBAAkB,EAAE,EAAE;gBACtB,2BAA2B,EAAE,IAAI;gBACjC,0BAA0B,EAAE,GAAG;gBAC/B,cAAc,EAAE,6BAAc,CAAC,KAAK;gBACpC,YAAY,EAAE,eAAe;aAC9B,CAAC;YACF,MAAM,aAAa,GAAG,IAAI,gBAAM,CAAC,mBAAmB,CAAC,CAAC;YACtD,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"Config.test.js","sourcesContent":["import Config from './Config';\nimport { BlockchainType } from './common-enums';\nimport { defaultConfiguration } from './Config';\n\ndescribe('Config class', () => {\n\n  describe('check default configuration are set', () => {\n\n    it('should contain all default configuration', async () => {\n      const configuration = new Config({});\n      expect(configuration).toEqual(defaultConfiguration);\n    });\n  });\n\n  describe('check costume configuration are set', () => {\n\n    it('should contain all costume configuration', async () => {\n      const configurationObject = {\n        ethNodeUrl: 'ETH_NODE_URL',\n        apiSeedUrls: ['API_SEED_URL_1', 'API_SEED_URL_2'],\n        kafkaSeedUrls: ['KAFKA_SEED_URL_1', 'KAFKA_SEED_URL_2'],\n        identityTtl: 12,\n        needTypeTtl: 34,\n        needTtl: 56,\n        missionConsumerTtl: 78,\n        missionProviderTtl: 90,\n        kafkaBrowserPollingInterval: 1000,\n        kafkaBrowserRequestTimeout: 500,\n        blockchainType: BlockchainType.local,\n        contractPath: 'CONTRACT_PATH',\n      };\n      const configuration = new Config(configurationObject);\n      expect(configuration).toEqual(configurationObject);\n    });\n  });\n\n});\n"]}