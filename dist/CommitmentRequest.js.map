{"version":3,"sources":["../src/CommitmentRequest.ts"],"names":[],"mappings":";;AAAA,mCAA4B;AAG5B,iFAA0E;AAE1E;IACI,YAAoB,MAAc,EAAU,wBAAiD,EAAU,OAAgB;QAAnG,WAAM,GAAN,MAAM,CAAQ;QAAU,6BAAwB,GAAxB,wBAAwB,CAAyB;QAAU,YAAO,GAAP,OAAO,CAAS;QACnH,MAAM;IACV,CAAC;IAEM,KAAK,CAAC,OAAO;QAChB,MAAM,4BAA4B,GAAiC,IAAI,sCAA4B,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;QAC1H,MAAM,eAAK,CAAC,UAAU,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,4BAA4B,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/G,CAAC;CACJ;AATD,oCASC","file":"CommitmentRequest.js","sourcesContent":["import Kafka from './Kafka';\nimport IConfig from './IConfig';\nimport CommitmentRequestParams from './CommitmentRequestParams';\nimport CommitmentConfirmationParams from './CommitmentConfirmationParams';\n\nexport default class CommitmentRequest {\n    constructor(private _bidId: string, private _commitmentRequestParams: CommitmentRequestParams, private _config: IConfig) {\n        /** */\n    }\n\n    public async confirm() {\n        const commitmentConfirmationParams: CommitmentConfirmationParams = new CommitmentConfirmationParams({bidId: this._bidId});\n        await Kafka.sendParams(this._commitmentRequestParams.neederId, commitmentConfirmationParams, this._config);\n    }\n}\n"]}