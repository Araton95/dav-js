{"version":3,"sources":["../src/CommitmentConfirmationParams.ts"],"names":[],"mappings":";;AAAA,+CAAwC;AAOxC,kCAAkD,SAAQ,qBAAW;IAanE,YAAY,MAA+C;QACzD,KAAK,CACH,4BAA4B,CAAC,SAAS,EACtC,4BAA4B,CAAC,YAAY,EACzC,MAAM,CACP,CAAC;QACF,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC3B;IACH,CAAC;IAjBM,MAAM,CAAC,cAAc;QAC1B,OAAO,4BAA4B,CAAC,YAAY,CAAC;IACnD,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC9B,OAAO,4BAA4B,CAAC,SAAS,CAAC;IAChD,CAAC;IAaM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,gBAAgB;QACrB,MAAM,OAAO,GAAQ,EAAE,CAAC;QACxB,OAAO,CACL,4BAA4B,CAAC,YAAY,CAC1C,GAAG,4BAA4B,CAAC;QACjC,OAAO,CAAC,QAAQ,GAAG,CAAC,4BAA4B,CAAC,YAAY,CAAC,CAAC;QAC/D,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1B,CAAC;;AA5Ca,sCAAS,GAAG,EAAE,CAAC;AACf,yCAAY,GAAG,yBAAyB,CAAC;AAFzD,+CA8CC","file":"CommitmentConfirmationParams.js","sourcesContent":["import BasicParams from './BasicParams';\nimport IBasicParams from './IBasicParams';\n\nexport interface ICommitmentConfirmationParams extends IBasicParams {\n  bidId: string;\n}\n\nexport default class CommitmentConfirmationParams extends BasicParams {\n  public static _protocol = '';\n  public static _messageType = 'commitment_confirmation';\n  public bidId: string;\n\n  public static getMessageType(): string {\n    return CommitmentConfirmationParams._messageType;\n  }\n\n  public static getMessageProtocol(): string {\n    return CommitmentConfirmationParams._protocol;\n  }\n\n  constructor(values?: Partial<ICommitmentConfirmationParams>) {\n    super(\n      CommitmentConfirmationParams._protocol,\n      CommitmentConfirmationParams._messageType,\n      values,\n    );\n    if (!!values) {\n      this.bidId = values.bidId;\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, {\n      bidId: this.bidId,\n      isConfirmed: true,\n    });\n    return formattedParams;\n  }\n\n  public getProtocolTypes() {\n    const typeMap: any = {};\n    typeMap[\n      CommitmentConfirmationParams._messageType\n    ] = CommitmentConfirmationParams;\n    typeMap.messages = [CommitmentConfirmationParams._messageType];\n    return typeMap;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.bidId = json.bidId;\n  }\n}\n"]}