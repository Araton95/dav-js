{"version":3,"sources":["../src/NeedParams.ts"],"names":[],"mappings":";;AAAA,+CAAwC;AAGxC;;GAEG;AACH,gBAAyC,SAAQ,qBAAW;IAc1D,YAAY,QAAgB,EAAE,IAAY,EAAE,MAA4B;QACtE,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACrB,IAAI,CAAC,QAAQ,GAAG;oBACd,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG;oBACxB,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;iBAC3B,CAAC;aACH;SACF;IACH,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC7B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE;gBACR,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG;gBAC5C,SAAS,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI;aAC/C;YACD,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG;YACd,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAC5C,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS;SAC/C,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1B,CAAC;CACF;AAlDD,6BAkDC","file":"NeedParams.js","sourcesContent":["import BasicParams from './BasicParams';\nimport { ID, DavID, ILocation } from './common-types';\n\n/**\n * @class The abstract Class NeedParams represent common parameters of NeedParams classes.\n */\nexport default abstract class NeedParams extends BasicParams {\n  /**\n   * @property The need's topic id (used to send messages and bids to consumer).\n   */\n  public id: ID;\n  /**\n   * @property The need's topic id (used to send messages and bids to consumer).\n   */\n  public davId: DavID;\n  /**\n   * @property The consumer current location.\n   */\n  public location: ILocation;\n\n  constructor(protocol: string, type: string, values?: Partial<NeedParams>) {\n    super(protocol, type, values);\n    if (!!values) {\n      this.id = values.id;\n      this.davId = values.davId;\n      if (!!values.location) {\n        this.location = {\n          lat: values.location.lat,\n          long: values.location.long,\n        };\n      }\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, {\n      id: this.id,\n      location: {\n        latitude: this.location && this.location.lat,\n        longitude: this.location && this.location.long,\n      },\n      davId: this.davId,\n    });\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.id = json.id;\n    this.location = {\n      lat: json.location && json.location.latitude,\n      long: json.location && json.location.longitude,\n    };\n    this.davId = json.davId;\n  }\n}\n"]}