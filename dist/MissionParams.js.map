{"version":3,"sources":["../src/MissionParams.ts"],"names":[],"mappings":";;AAAA,+CAAwC;AAGxC,mCAA4B;AAC5B,iDAA2C;AAI3C;;GAEG;AACH,mBAA4C,SAAQ,qBAAW;IAM7D,sGAAsG;IACtG,YACE,QAAgB,EAChB,IAAY,EACZ,MAAgC;QAEhC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YACtC,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;YAC/B,IAAI,WAAW,EAAE;gBACf,WAAW;oBACT,MAAM,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChE,WAAW,CAAC,GAAG,CACb,CAAC,KAAsB,EAAU,EAAE;oBACjC,OAAO,OAAO,KAAK,KAAK,QAAQ;wBAC9B,CAAC,CAAC,IAAI,eAAK,CAAC,KAAmB,EAAE,wBAAS,CAAC,IAAI,CAAC;wBAChD,CAAC,CAAC,IAAI,eAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC5D,CAAC,CACF,CAAC;gBACF,IAAI,CAAC,KAAK,GAAG,WAAuB,CAAC;aACtC;SACF;IACH,CAAC;IAEM,SAAS;QACd,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,eAAe,EAAE;YAC7B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC,CAAC;QACH,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,WAAW,CAAC,IAAS;QAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACtC,CAAC;CACF;AAnDD,gCAmDC","file":"MissionParams.js","sourcesContent":["import BasicParams from './BasicParams';\nimport IPrice from './IPrice';\nimport { ID, DavID, BigInteger } from './common-types';\nimport Price from './Price';\nimport { PriceType } from './common-enums';\nimport IMissionParams from './IMissionParams';\nimport BidParams from './BidParams';\n\n/**\n * @class The abstract Class MissionParams represent common parameters of MissionParams classes.\n */\nexport default abstract class MissionParams extends BasicParams {\n  public price: IPrice[];\n  public id: ID;\n  public neederDavId: DavID;\n  public vehicleId: DavID;\n\n  // TODO: think if it does make sense let the user give id, but override it anyway when bid is accepted\n  constructor(\n    protocol: string,\n    type: string,\n    values?: Partial<IMissionParams>,\n  ) {\n    super(protocol, type, values);\n    if (!!values) {\n      this.id = values.id;\n      this.vehicleId = values.vehicleId;\n      this.neederDavId = values.neederDavId;\n      let priceObject = values.price;\n      if (priceObject) {\n        priceObject =\n          values.price instanceof Array ? values.price : [values.price];\n        priceObject.map(\n          (price: string | IPrice): IPrice => {\n            return typeof price === 'string'\n              ? new Price(price as BigInteger, PriceType.flat)\n              : new Price(price.value, price.type, price.description);\n          },\n        );\n        this.price = priceObject as IPrice[];\n      }\n    }\n  }\n\n  public serialize() {\n    const formattedParams = super.serialize();\n    Object.assign(formattedParams, {\n      id: this.id,\n      price: this.price,\n      vehicleId: this.vehicleId,\n      neederDavId: this.neederDavId,\n    });\n    return formattedParams;\n  }\n\n  public deserialize(json: any): void {\n    super.deserialize(json);\n    this.id = json.id;\n    this.price = json.price;\n    this.vehicleId = json.vehicleId;\n    this.neederDavId = json.neederDavId;\n  }\n}\n"]}